/* codepen.io/team/keyframers/pen/RwKoMmb?editors=0110 */

@import url('https://fonts.googleapis.com/css2?family=Playfair+Display&family=Poppins:ital,wght@0,100;1,300;1,400;1,500;1,700&family=Prata&display=swap');


*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    font-family: 'Prata', serif;
    background: #ede8e2;
    display: flex;
    height: 100vh;
    font-weight: bold;
}

.grid{
    background: rgb(250, 236, 236);
    height: 90vh;
    width: 90%;
    max-width: 1200px;
    margin: auto;
    box-shadow: 0 0 30px -10px rgba(138,135,135,0.5);
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(6, 1fr);
    overflow: hidden;
}

.grid::before{
    content: "";
    grid-column: 4/-1;
    grid-row: 1/-1;
    background-image: url(garden.jpg);
    background-size: cover;
    background-position: right top;
    clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
    animation: show 2s 3.5s cubic-bezier(0,1.12,.71,.97) forwards;
}

.grid__texts{
    grid-row: 2/-2;
    grid-column: 2/8;
    z-index: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    clip-path: polygon(0 100%, 100% 100%, 100% 100%, 0 100%);
    transform: translate(50%);
    /* animation: show 1s 2s cubic-bezier(0,1.12,.71,.97) forwards; */
    /* animation: move 1s 2s forwards; */
    animation: show 2s forwards, move 1s 2s forwards;
}

.grid__title{
    font-size: 6rem;
    color: rgb(146, 132, 132)
}

.grid__title--transform{
    font-family: 'Playfair Display', serif;
    font-size: 4.5rem;
    transform: translate(20%);
    animation: move 1s 2s forwards;
}

@keyframes show{
    to{
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    }
}

@keyframes move{
    to{
        transform: translate(0);

    }
}